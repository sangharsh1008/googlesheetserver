{"version":3,"sources":["features/login/component/LoginPage.js","features/login/component/SignUpForm.js","features/login/LoginContainer.js","app/common/PageWrapper.js","features/books/PDFViewerContainer.js","features/dashboard/DashBoardContainer.js","features/assessment/components/QestionAnswerComponent.js","features/assessment/AssessmentContainer.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","props","onLoginSubmit","displayMessage","useState","userName","setUserName","password","setPassWord","Fragment","className","Input","type","name","value","onChange","e","target","placeholder","Button","color","onClick","preventDefault","onSignUpClick","SignUpForm","setName","emailId","setEmailID","mobileNumber","setMobileNumber","style","display","flexDirection","margin","background","onSignUp","LoginContainer","state","isWrongCredintial","shouldShowSignUpForm","fetch","window","currentURL","method","body","JSON","stringify","id","headers","then","res","json","successful","history","push","setState","console","log","email","this","marginTop","onSubmit","bind","Component","PAGESIZE","SMALL","width","height","MEDIUM","BIG","FULL","PageWrapper","size","borderRadius","children","PDFViewerContainer","numPages","pageNumber","fileURL","onDocumentLoadSuccess","goToPrevPage","goToNextPage","file","Blob","booksData","URL","createObjectURL","backToHomePage","src","Topics","Classes","Subjects","DashBoardContainer","selected","isEnableSubject","selectedClass","selectedSubject","isShowBook","class","subject","blob","map","padding","cursor","textAlign","handleOnSelectSubject","QuestionAnswerComponent","selectOption","isShowAnswer","toggleAnswer","question","options","correctAns","val","index","key","AssessmentContainer","questionNo","data","score","selectedOption","err","status","alignItems","correctAnswer","option","React","document","location","href","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9f09a624.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./login.css\";\nimport { Button, Input } from \"reactstrap\";\nexport const LoginPage = props => {\n  const { onLoginSubmit, displayMessage } = props;\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassWord] = useState(\"\");\n\n  return (\n    <React.Fragment>\n      <div className=\"backgroundImage\" />\n      <div className=\"loginFormWrapper\">\n        <span className=\"loginFormHeading\">Login Form </span>\n        <div className=\"inputBoxWrapper\">\n          <Input\n            type=\"text\"\n            className=\"inputBox\"\n            name=\"\"\n            value={userName}\n            onChange={e => {\n              setUserName(e.target.value);\n              //  console.log(e, e.value, e.target.value, \"sangharsh\");\n            }}\n            placeholder=\"username\"\n          />\n          <Input\n            type=\"password\"\n            name=\"\"\n            className=\"inputBox\"\n            value={password}\n            onChange={e => {\n              setPassWord(e.target.value);\n            }}\n            placeholder=\"password\"\n          />\n        </div>\n        <div>\n          <Button\n            className=\"buttonWrapper\"\n            color=\"primary\"\n            onClick={e => {\n              e.preventDefault();\n              onLoginSubmit(userName, password);\n            }}\n            type=\"submit\"\n            name=\"button\"\n          >\n            Login\n          </Button>\n\n          <Button\n            className=\"buttonWrapper\"\n            color=\"secondary\"\n            onClick={() => props.onSignUpClick()}\n          >\n            Sign Up\n          </Button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React, { useState } from \"react\";\n\nexport const SignUpForm = props => {\n  const [name, setName] = useState(\"\");\n  const [emailId, setEmailID] = useState(\"\");\n  const [mobileNumber, setMobileNumber] = useState(\"\");\n  const [password, setPassWord] = useState();\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", margin: \"10px\" }}>\n      Registration FORM\n      <input\n        type=\"text\"\n        name=\"\"\n        style={{ margin: \"10px\" }}\n        value={name}\n        onChange={e => {\n          setName(e.target.value);\n          //  console.log(e, e.value, e.target.value, \"sangharsh\");\n        }}\n        className=\"form-control input_user\"\n        placeholder=\"Name\"\n      />\n      <input\n        type=\"text\"\n        name=\"\"\n        value={emailId}\n        style={{ margin: \"10px\" }}\n        onChange={e => {\n          setEmailID(e.target.value);\n          //  console.log(e, e.value, e.target.value, \"sangharsh\");\n        }}\n        className=\"form-control input_user\"\n        placeholder=\"emailId\"\n      />\n      <input\n        type=\"Number\"\n        name=\"\"\n        value={mobileNumber}\n        style={{ margin: \"10px\" }}\n        onChange={e => {\n          setMobileNumber(e.target.value);\n          //  console.log(e, e.value, e.target.value, \"sangharsh\");\n        }}\n        className=\"form-control input_user\"\n        placeholder=\"Mobile Number\"\n      />\n      <input\n        type=\"password\"\n        name=\"\"\n        value={password}\n        style={{ margin: \"10px\" }}\n        onChange={e => {\n          setPassWord(e.target.value);\n          //  console.log(e, e.value, e.target.value, \"sangharsh\");\n        }}\n        className=\"form-control input_user\"\n        placeholder=\"Password\"\n      />\n      <button\n        style={{ margin: \"10px\", background: \"lightblue\" }}\n        onClick={() => props.onSignUp(name, emailId, mobileNumber, password)}\n      >\n        submit\n      </button>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { LoginPage } from \"./component/LoginPage\";\n\nimport { SignUpForm } from \"./component/SignUpForm\";\n\nclass LoginContainer extends Component {\n  state = {\n    isWrongCredintial: false,\n    shouldShowSignUpForm: false,\n    displayMessage: \"\"\n  };\n\n  onSubmit(userName, password) {\n    fetch(window.currentURL + \"login\", {\n      method: \"POST\", // or 'PUT'\n      body: JSON.stringify({ id: userName, password: password }), // data can be `string` or {object}!\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.successful) {\n          this.props.history.push(\"/dashboard\");\n        } else {\n          this.setState({\n            isWrongCredintial: true\n          });\n        }\n      });\n    console.log(userName, password, \"sangharsh\");\n  }\n\n  onSignUp(name, email, mobileNumber, password) {\n    fetch(window.currentURL + \"addUser\", {\n      method: \"POST\", // or 'PUT'\n      body: JSON.stringify({ name, email, mobileNumber, password }), // data can be `string` or {object}!\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(res => {\n        if (res.successful) {\n          this.history.push(\"/\");\n        } else {\n          console.log(\"user is already registered\");\n        }\n      });\n  }\n\n  render() {\n    const {\n      isWrongCredintial,\n      shouldShowSignUpForm,\n      displayMessage\n    } = this.state;\n    if (shouldShowSignUpForm) {\n      return (\n        <SignUpForm\n          onSignUp={(name, email, mobileNumber, password) =>\n            this.onSignUp(name, email, mobileNumber, password)\n          }\n        />\n      );\n    } else {\n      return (\n        <div style={{ marginTop: \"100px\" }}>\n          <LoginPage\n            onSignUpClick={() => this.setState({ shouldShowSignUpForm: true })}\n            onLoginSubmit={this.onSubmit.bind(this)}\n            displayMessage={displayMessage}\n          />\n        </div>\n      );\n    }\n    //  return <  LessonContainer/>\n  }\n}\nexport default LoginContainer;\n","import React from 'react'\n\nconst PAGESIZE={\n  SMALL:{\n    width:\"200px\",\n    height:\"200px\"\n  },\n  MEDIUM:{\n    width:\"500px\",\n    height:\"500px\"\n  },\n  BIG:{\n    width:\"700px\",\n    height:\"700px\"\n  },\n  FULL:{\n    width:\"100%\",\n    height:\"100%\"\n  }\n}\n\nexport const PageWrapper = (props) => {\nconst { width, height } =  PAGESIZE[props.size]\nconsole.log(width);\n\nreturn <div style={{background:'lightgrey',width:width,height:height,borderRadius:\"50px 50px 50px 50px\"}}>\n{props.children}\n</div>\n\n}\n","import React, { Component } from \"react\";\n\nexport default class PDFViewerContainer extends Component {\n  state = { numPages: null, pageNumber: 1, fileURL: false };\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n\n  goToPrevPage = () =>\n    this.setState(state => ({ pageNumber: state.pageNumber - 1 }));\n  goToNextPage = () =>\n    this.setState(state => ({ pageNumber: state.pageNumber + 1 }));\n\n  componentDidMount() {\n    const file = new Blob([this.props.booksData], { type: \"application/pdf\" });\n\n    const fileURL = URL.createObjectURL(file);\n    this.setState({\n      fileURL: fileURL\n    });\n  }\n  render() {\n    const { pageNumber, numPages, fileURL } = this.state;\n\n    return (\n      <div>\n        <button onClick={() => this.props.backToHomePage()}>\"HomePage\"</button>\n        <iframe src={fileURL} width=\"700px\" height=\"500px\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { PageWrapper } from \"../../app/common/PageWrapper\";\nimport PDFViewerContainer from \"../books/PDFViewerContainer\";\n\nconst Topics = [\"Syllabus\", \"Books\", \"Assessment\", \"Lectures\"];\nconst Classes = [\"5\", \"6\", \"7\", \"8\", \"9\"];\nconst Subjects = [\"Marathi\", \"Math\", \"Economics\"];\n\nexport default class DashBoardContainer extends Component {\n  state = {\n    selected: Topics[0],\n    isEnableSubject: false,\n    selectedClass: \"\",\n    selectedSubject: \"\",\n    isShowBook: false,\n    booksData: \"\"\n  };\n  handleOnSelectSubject() {\n    const { selectedClass, selectedSubject, selected } = this.state;\n    console.log(window.currentURL, \"sangharsh\");\n    if (selected === \"Assessment\") {\n      window.selectedClass = selectedClass;\n      window.selectedSubject = selectedSubject;\n      this.props.history.push(\"/assessment\");\n    } else {\n      fetch(window.currentURL + \"get\" + selected, {\n        method: \"POST\", // or 'PUT'\n        body: JSON.stringify({\n          class: selectedClass,\n          subject: selectedSubject\n        }), // data can be `string` or {object}!\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      })\n        .then(res => res.blob())\n        .then(res => {\n          console.log(res, \"sangha\");\n          this.setState({\n            isShowBook: true,\n            booksData: res\n          });\n        });\n    }\n  }\n  render() {\n    const {\n      selected,\n      isShowBook,\n      isEnableSubject,\n      selectedClass,\n      booksData\n    } = this.state;\n\n    if (isShowBook) {\n      return (\n        <PDFViewerContainer\n          booksData={booksData}\n          backToHomePage={() => this.setState({ isShowBook: false })}\n        />\n      );\n    }\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          {Topics.map(value => (\n            <div\n              onClick={() =>\n                this.setState({ selected: value, isEnableSubject: false })\n              }\n              style={{\n                background: selected === value ? \"lightgrey\" : \"\",\n                borderRadius: selected === value ? \"100% 50%\" : \"\",\n                padding: \"15px\",\n                cursor: \"pointer\"\n              }}\n            >\n              {value}\n            </div>\n          ))}\n        </div>\n        <PageWrapper size=\"MEDIUM\">\n          <>\n            <div>\n              {Classes.map(value => (\n                <>\n                  <div\n                    onClick={() => {\n                      if (selectedClass === value) {\n                        this.setState({ isEnableSubject: !isEnableSubject });\n                      } else {\n                        this.setState({\n                          selectedClass: value,\n                          isEnableSubject: true\n                        });\n                      }\n                    }}\n                    style={{\n                      textAlign: \"left\",\n                      cursor: \"pointer\",\n                      margin: \"10px 10px 0px 60px\"\n                    }}\n                  >\n                    {\" * \" + value + \" th class\"}\n                  </div>\n                  {isEnableSubject && selectedClass === value && (\n                    <ul>\n                      {Subjects.map(value => (\n                        <li\n                          onClick={() => {\n                            this.setState(\n                              {\n                                selectedSubject: value\n                              },\n                              this.handleOnSelectSubject\n                            );\n                          }}\n                          style={{\n                            color: \"blue\",\n                            textAlign: \"left\",\n                            cursor: \"pointer\",\n                            margin: \"10px 10px 0px 60px\"\n                          }}\n                        >\n                          {value}\n                        </li>\n                      ))}\n                    </ul>\n                  )}\n                </>\n              ))}\n            </div>\n          </>\n        </PageWrapper>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\n\nexport const QuestionAnswerComponent = props => {\n  const [selected, selectOption] = useState(-1);\n  const [isShowAnswer, toggleAnswer] = useState(false);\n  const { question, options, onSubmit, correctAns } = props;\n  return (\n    <>\n      <div style={{ margin: \"15px\" }}> {question} </div>\n      <div>\n        {\" \"}\n        {options.map((val, index) => {\n          return (\n            <div key={index} style={{ margin: \"5px\" }}>\n              <input\n                value={false}\n                name=\"options\"\n                key={index}\n                onChange={() => selectOption(index)}\n                type=\"radio\"\n              />{\" \"}\n              {val}\n            </div>\n          );\n        })}\n      </div>\n      {isShowAnswer && <>correct Answer :{options[correctAns]}</>}\n      <div>\n        <button style={{ margin: \"15px\" }} onClick={() => toggleAnswer(true)}>\n          {\" \"}\n          Answer\n        </button>\n        <button\n          onClick={() => {\n            toggleAnswer(false);\n            onSubmit(selected);\n          }}\n          style={{ margin: \"15px\" }}\n        >\n          {\" \"}\n          submit\n        </button>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { QuestionAnswerComponent } from \"./components/QestionAnswerComponent\";\n\n// <QuestionAnswerComponent question=\"what is your name\" options={['a','b','c','d']}/>\nexport default class AssessmentContainer extends React.Component {\n  state = {\n    questionNo: 1,\n    data: {},\n    score: 0\n  };\n\n  componentDidMount() {\n    fetch(window.currentURL + \"getAssessment\", {\n      method: \"POST\", // or 'PUT'\n      body: JSON.stringify({\n        class: window.selectedClass,\n        subject: window.selectedSubject\n      }), // data can be `string` or {object}!\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then((res, err) => {\n        if (res.status === 200) return res.json();\n      })\n      .then(data => this.setState({ data: data }));\n  }\n\n  onSubmit = selectedOption => {\n    let { questionNo, score } = this.state;\n    this.setState({\n      questionNo: questionNo + 1,\n      score: score + 10\n    });\n  };\n\n  render() {\n    const { data, questionNo } = this.state;\n    console.log(data);\n    if (data[`question${questionNo}`]) {\n      return (\n        <React.Fragment>\n          <button onClick={() => this.props.history.push(\"/dashboard\")}>\n            \"HomePage\"\n          </button>\n          <div\n            style={{\n              alignItems: \"center\",\n              display: \"flex\",\n              flexDirection: \"column\"\n            }}\n          >\n            <div\n              style={{\n                alignItems: \"inherit\",\n                flexDirection: \"inherit\",\n                display: \"inherit\",\n                width: \"800px\",\n                height: \"500px\",\n                background: \"lightgrey\"\n              }}\n            >\n              <QuestionAnswerComponent\n                correctAns={data[`question${questionNo}`].correctAnswer}\n                onSubmit={this.onSubmit}\n                question={data[`question${questionNo}`].question}\n                options={data[`question${questionNo}`].option}\n              />\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return <>loading</>;\n    }\n  }\n}\n","import React from \"react\";\nimport LoginContainer from \"./features/login/LoginContainer\";\nimport DashBoardContainer from \"./features/dashboard/DashBoardContainer\";\nimport AssessmentContainer from \"./features/assessment/AssessmentContainer\";\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nwindow.currentURL = document.location.href;\nfunction App() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n        height: \"656px\"\n      }}\n    >\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={LoginContainer} />\n          <Route exact path=\"/dashboard\" component={DashBoardContainer} />\n          <Route exact path=\"/assessment\" component={AssessmentContainer} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}